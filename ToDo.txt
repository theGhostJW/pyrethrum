
* Simple Interactors eg
* logging interactor - D list
* logging interactor - Console
 * File content
  * load or default based on content of file
  * errors IO error file does not exist
 * runConfig - state
  * mock file load

 * check out class FindElem (t :: * -> *) (r :: [* -> *]) where ~ may be good for detecting effects

??
  inlining: {-# INLINE send #-}
  Type Families:  https://wiki.haskell.org/Type_families


-- PR
*Main InteractorSpike Lib> demoPure
PureResult {result = Right (), interactionLog = [">>> What is your name?: ","<<< John",">>> Hello John have a nice day !!"], remainingInputs = ["I need to go write a monad tutorial nice to meet you"]}


*Main InteractorSpike Lib> demoEffectful
What is your name?:
John
Hello John have a nice day !!


*Main InteractorSpike Lib> demoPureFail
PureResult {result = *** Exception: not enough input
