test/SuiteRuntimeTest.hs:11:1-27: warning: [GHC-66111] [-Wunused-imports]
    The import of ‘PyrethrumExtras’ is redundant
   |
11 | import PyrethrumExtras (uu)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
/home/theghostjw/pyrethrum/pyrethrum/test/SuiteRuntimeTest.hs:341:1
$> unit_failed
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1166 }
Start
  { idx = 0
  , threadId = 1168
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1168
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1168
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1168
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1168
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1166 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1168
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1168
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1168
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1168
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1168
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1168
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1173 }
Start
  { idx = 0
  , threadId = 1174
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1174
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1174
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1174
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1174
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1173 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1174
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1174
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1174
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1174
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1174
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1174
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1180 }
Start
  { idx = 0
  , threadId = 1181
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1181
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1181
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1181
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1181
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1180 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1181
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1181
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1181
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1181
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1181
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1181
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1187 }
Start
  { idx = 0
  , threadId = 1189
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1189
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1189
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1189
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1189
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1187 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1189
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1189
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1189
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1189
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1189
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1189
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1194 }
Start
  { idx = 0
  , threadId = 1196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1196
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1196
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1194 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1196
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1196
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1196
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1201 }
Start
  { idx = 0
  , threadId = 1203
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1203
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1203
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1203
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1203
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1201 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1203
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1203
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1203
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1203
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1203
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1203
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1208 }
Start
  { idx = 0
  , threadId = 1210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1210
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1210
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1208 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1210
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1210
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1210
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1215 }
Start
  { idx = 0
  , threadId = 1217
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1217
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1217
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1217
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1217
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1215 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1217
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1217
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1217
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1217
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1217
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1217
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1222 }
Start
  { idx = 0
  , threadId = 1224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1224
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1224
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1222 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1224
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1224
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1224
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1229 }
Start
  { idx = 0
  , threadId = 1230
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1230
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1230
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1230
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1230
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1229 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1230
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1230
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1230
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1230
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1230
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1230
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1236 }
Start
  { idx = 0
  , threadId = 1237
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1237
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1237
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1237
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1237
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1236 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1237
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1237
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1237
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1237
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1237
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1237
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1243 }
Start
  { idx = 0
  , threadId = 1244
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1244
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1244
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1244
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1244
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1243 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1244
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1244
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1244
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1244
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1244
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1244
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1250 }
Start
  { idx = 0
  , threadId = 1252
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1252
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1252
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1252
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1252
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1250 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1252
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1252
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1252
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1252
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1252
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1252
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1257 }
Start
  { idx = 0
  , threadId = 1259
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1259
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1259
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1259
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1259
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1257 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1259
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1259
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1259
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1259
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1259
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1259
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1264 }
Start
  { idx = 0
  , threadId = 1265
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1265
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1265
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1265
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1265
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1264 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1265
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1265
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1265
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1265
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1265
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1265
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1271 }
Start
  { idx = 0
  , threadId = 1272
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1272
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1272
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1272
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1272
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1271 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1272
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1272
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1272
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1272
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1272
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1272
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1278 }
Start
  { idx = 0
  , threadId = 1279
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1279
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1279
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1279
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1279
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1278 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1279
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1279
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1279
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1279
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1279
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1279
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1285 }
Start
  { idx = 0
  , threadId = 1286
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1286
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1286
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1286
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1286
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1285 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1286
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1286
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1286
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1286
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1286
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1286
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1292 }
Start
  { idx = 0
  , threadId = 1293
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1293
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1293
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1293
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1293
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1292 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1293
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1293
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1293
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1293
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1293
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1293
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1299 }
Start
  { idx = 0
  , threadId = 1300
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1300
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1300
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1300
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1300
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1299 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1300
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1300
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1300
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1300
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1300
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1300
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1306 }
Start
  { idx = 0
  , threadId = 1308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1308
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1308
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1306 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1308
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1308
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1308
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1313 }
Start
  { idx = 0
  , threadId = 1314
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1314
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1314
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1314
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1314
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1313 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1314
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1314
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1314
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1314
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1314
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1314
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1320 }
Start
  { idx = 0
  , threadId = 1321
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1321
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1321
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1321
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1321
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1320 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1321
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1321
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1321
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1321
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1321
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1321
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1327 }
Start
  { idx = 0
  , threadId = 1328
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1328
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1328
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1328
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1328
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1327 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1328
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1328
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1328
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1328
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1328
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1328
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1334 }
Start
  { idx = 0
  , threadId = 1335
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1335
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1335
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 0
  , threadId = 1336
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 1
  , threadId = 1336
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1334 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1335
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 1
  , threadId = 1336
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 0
  , threadId = 1336
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1335
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1335
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1335
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 0
  , threadId = 1336
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1341 }
Start
  { idx = 0
  , threadId = 1342
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1342
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1342
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1342
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1342
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1341 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1342
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1342
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1342
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1342
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1342
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1342
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1348 }
Start
  { idx = 0
  , threadId = 1349
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1349
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1349
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1349
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1349
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1348 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1349
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1349
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1349
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1349
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1349
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1349
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1355 }
Start
  { idx = 0
  , threadId = 1357
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1357
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1357
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1357
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1357
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1355 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1357
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1357
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1357
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1357
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1357
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1357
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1362 }
Start
  { idx = 0
  , threadId = 1364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1364
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1364
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1362 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1364
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1364
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1364
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1369 }
Start
  { idx = 0
  , threadId = 1371
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1371
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1371
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1371
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1371
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1369 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1371
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1371
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1371
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1371
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1371
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1371
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1377
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1377
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1377
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1377
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1377
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1376 }
Start
  { idx = 0
  , threadId = 1377
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1377
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1377
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1377
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1377
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1376 }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1377
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1383 }
Start
  { idx = 0
  , threadId = 1384
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1384
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1384
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1384
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1384
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1383 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1384
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1384
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1384
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1384
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1384
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1384
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1390 }
Start
  { idx = 0
  , threadId = 1392
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1392
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1392
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1392
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1392
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1390 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1392
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1392
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1392
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1392
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1392
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1392
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1397 }
Start
  { idx = 0
  , threadId = 1399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1399
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1399
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1397 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1399
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1399
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1399
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1404 }
Start
  { idx = 0
  , threadId = 1406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1406
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1406
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1404 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1406
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1406
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1406
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1411 }
Start
  { idx = 0
  , threadId = 1413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1413
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1413
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1411 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1413
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1413
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1413
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1418 }
Start
  { idx = 0
  , threadId = 1419
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1419
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1419
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1419
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1419
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1418 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1419
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1419
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1419
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1419
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1419
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1419
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1425 }
Start
  { idx = 0
  , threadId = 1426
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1426
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1426
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1426
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1426
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1425 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1426
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1426
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1426
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1426
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1426
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1426
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1432 }
Start
  { idx = 0
  , threadId = 1433
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1433
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1433
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1433
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1433
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1432 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1433
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1433
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1433
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1433
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1433
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1433
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1439 }
Start
  { idx = 0
  , threadId = 1440
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1440
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1440
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1440
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1440
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1439 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1440
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1440
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1440
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1440
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1440
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1440
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1446 }
Start
  { idx = 0
  , threadId = 1447
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1447
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1447
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1447
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1447
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1446 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1447
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1447
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1447
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1447
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1447
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1447
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1453 }
Start
  { idx = 0
  , threadId = 1454
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1454
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1454
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1454
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1454
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1453 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1454
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1454
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1454
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1454
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1454
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1454
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1460 }
Start
  { idx = 0
  , threadId = 1461
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1461
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1461
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1461
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1461
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1460 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1461
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1461
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1461
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1461
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1461
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1461
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1467 }
Start
  { idx = 0
  , threadId = 1469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1469
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1469
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1467 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1469
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1469
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1469
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1474 }
Start
  { idx = 0
  , threadId = 1475
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1475
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1475
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1475
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1475
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1474 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1475
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1475
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1475
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1475
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1475
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1475
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1481 }
Start
  { idx = 0
  , threadId = 1482
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1482
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1482
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1482
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1482
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1481 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1482
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1482
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1482
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1482
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1482
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1482
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1488 }
Start
  { idx = 0
  , threadId = 1489
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1489
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1489
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1489
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1489
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1488 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1489
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1489
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1489
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1489
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1489
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1489
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1495 }
Start
  { idx = 0
  , threadId = 1497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1497
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1497
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1495 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1497
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1497
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1497
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1502 }
Start
  { idx = 0
  , threadId = 1503
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1503
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1503
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1503
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1503
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1502 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1503
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1503
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1503
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1503
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1503
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1503
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1509 }
Start
  { idx = 0
  , threadId = 1510
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1510
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1510
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1510
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1510
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1509 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1510
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1510
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1510
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1510
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1510
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1510
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1516 }
Start
  { idx = 0
  , threadId = 1517
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1517
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1517
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1517
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1517
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1516 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1517
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1517
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1517
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1517
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1517
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1517
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1523 }
Start
  { idx = 0
  , threadId = 1524
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1524
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1524
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1524
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1524
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1523 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1524
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1524
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1524
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1524
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1524
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1524
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1530 }
Start
  { idx = 0
  , threadId = 1532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1532
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1532
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1530 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1532
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1532
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1532
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1537 }
Start
  { idx = 0
  , threadId = 1538
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1538
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1538
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1538
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1538
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1537 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1538
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1538
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1538
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1538
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1538
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1538
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1544 }
Start
  { idx = 0
  , threadId = 1545
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1545
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1545
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1545
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1545
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1545
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1544 }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1545
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1545
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1545
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1545
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1545
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1551 }
Start
  { idx = 0
  , threadId = 1553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1553
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1553
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1551 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1553
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1553
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1553
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1558 }
Start
  { idx = 0
  , threadId = 1559
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1559
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1559
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1559
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1559
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1558 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1559
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1559
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1559
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1559
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1559
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1559
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1565 }
Start
  { idx = 0
  , threadId = 1566
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1566
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1566
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1566
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1566
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1565 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1566
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1566
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1566
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1566
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1566
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1566
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1572 }
Start
  { idx = 0
  , threadId = 1574
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1574
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1574
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1574
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1574
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1572 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1574
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1574
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1574
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1574
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1574
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1574
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
#### Template ####
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1579 }
Start
  { idx = 0
  , threadId = 1580
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1580
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1580
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1580
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1580
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1579 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1580
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1580
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1580
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1580
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1580
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1580
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1586 }
Start
  { idx = 0
  , threadId = 1587
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1587
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1587
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1587
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1587
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1586 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1587
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1587
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1587
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1587
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1587
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1587
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1593 }
Start
  { idx = 0
  , threadId = 1594
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1594
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1594
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1594
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1594
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1593 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1594
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1594
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1594
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1594
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1594
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1594
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1600 }
Start
  { idx = 0
  , threadId = 1601
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1601
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1601
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1601
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1601
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1601
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1601
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1601
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1601
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1601
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1608
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1608
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1608
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1601
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1600 }
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1607 }
Start
  { idx = 0
  , threadId = 1608
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1608
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1608
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1608
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1608
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1607 }
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1608
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1608
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1608
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1614 }
Start
  { idx = 0
  , threadId = 1615
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1615
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1615
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1615
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1615
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1614 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1615
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1615
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1615
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1615
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1615
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1615
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1621 }
Start
  { idx = 0
  , threadId = 1622
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1622
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1622
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1622
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1622
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1621 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1622
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1622
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1622
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1622
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1622
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1622
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1628 }
Start
  { idx = 0
  , threadId = 1629
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1629
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1629
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1629
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1629
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1628 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1629
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1629
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1629
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1629
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1629
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1629
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1635 }
Start
  { idx = 0
  , threadId = 1637
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1637
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1637
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1637
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1637
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1635 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1637
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1637
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1637
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1637
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1637
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1637
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1642 }
Start
  { idx = 0
  , threadId = 1643
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1643
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1643
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1643
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1643
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1642 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1643
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1643
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1643
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1643
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1643
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1643
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1649 }
Start
  { idx = 0
  , threadId = 1651
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1651
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1651
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1651
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1651
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1649 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1651
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1651
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1651
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1651
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1651
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1651
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1656 }
Start
  { idx = 0
  , threadId = 1658
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1658
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1658
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1658
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1658
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1656 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1658
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1658
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1658
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1658
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1658
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1658
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1663 }
Start
  { idx = 0
  , threadId = 1664
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1664
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1664
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1664
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1664
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1663 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1664
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1664
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1664
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1664
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1664
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1664
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1670 }
Start
  { idx = 0
  , threadId = 1671
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1671
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1671
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1671
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1671
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1670 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1671
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1671
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1671
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1671
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1671
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1671
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1677 }
Start
  { idx = 0
  , threadId = 1678
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1678
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1678
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1678
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1678
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1677 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1678
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1678
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1678
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1678
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1678
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1678
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1684 }
Start
  { idx = 0
  , threadId = 1685
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1685
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1685
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1685
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1685
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1684 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1685
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1685
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1685
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1685
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1685
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1685
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1691 }
Start
  { idx = 0
  , threadId = 1693
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1693
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1693
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1693
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1693
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1691 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1693
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1693
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1693
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1693
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1693
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1693
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1698 }
Start
  { idx = 0
  , threadId = 1700
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1700
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1700
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1700
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1700
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1698 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1700
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1700
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1700
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1700
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1700
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1700
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1705 }
Start
  { idx = 0
  , threadId = 1706
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1706
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1706
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1706
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1706
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1705 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1706
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1706
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1706
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1706
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1706
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1706
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1712 }
Start
  { idx = 0
  , threadId = 1713
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1713
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1713
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1713
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1713
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1712 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1713
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1713
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1713
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1713
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1713
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1713
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1719 }
Start
  { idx = 0
  , threadId = 1720
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1720
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1720
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1720
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1720
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1719 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1720
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1720
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1720
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1720
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1720
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1720
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1726 }
Start
  { idx = 0
  , threadId = 1727
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1727
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1727
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1727
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1727
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1726 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1727
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1727
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1727
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1727
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1727
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1727
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1733 }
Start
  { idx = 0
  , threadId = 1734
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1734
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1734
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1734
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1734
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1733 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1734
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1734
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1734
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1734
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1734
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1734
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1740 }
Start
  { idx = 0
  , threadId = 1741
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1741
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1741
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1741
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1741
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1740 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1741
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1741
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1741
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1741
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1741
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1741
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1747 }
Start
  { idx = 0
  , threadId = 1749
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1749
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1749
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1749
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1749
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1747 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1749
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1749
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1749
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1749
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1749
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1749
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1754 }
Start
  { idx = 0
  , threadId = 1756
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1756
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1756
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1756
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1756
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1754 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1756
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1756
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1756
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1756
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1756
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1756
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1761 }
Start
  { idx = 0
  , threadId = 1762
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1762
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1762
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1762
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1762
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1761 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1762
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1762
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1762
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1762
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1762
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1762
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1768 }
Start
  { idx = 0
  , threadId = 1769
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1769
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1769
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1769
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1769
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1768 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1769
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1769
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1769
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1769
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1769
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1769
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1775 }
Start
  { idx = 0
  , threadId = 1777
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1777
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1777
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1777
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1777
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1775 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1777
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1777
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1777
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1777
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1777
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1777
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1782 }
Start
  { idx = 0
  , threadId = 1784
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1784
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1784
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1784
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1784
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1782 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1784
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1784
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1784
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1784
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1784
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1784
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1789 }
Start
  { idx = 0
  , threadId = 1791
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1791
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1791
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1791
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1791
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1789 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1791
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1791
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1791
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1791
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1791
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1791
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1796 }
Start
  { idx = 0
  , threadId = 1797
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1797
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1797
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1797
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1797
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1796 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1797
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1797
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1797
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1797
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1797
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1797
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1803 }
Start
  { idx = 0
  , threadId = 1804
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1804
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1804
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1804
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1804
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1803 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1804
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1804
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1804
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1804
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1804
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1804
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1810 }
Start
  { idx = 0
  , threadId = 1811
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1811
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1811
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1811
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1811
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1810 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1811
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1811
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1811
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1811
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1811
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1811
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1817 }
Start
  { idx = 0
  , threadId = 1818
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1818
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1818
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1818
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1818
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1817 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1818
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1818
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1818
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1818
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1818
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1818
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1824 }
Start
  { idx = 0
  , threadId = 1825
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1825
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1825
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1825
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1825
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1824 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1825
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1825
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1825
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1825
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1825
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1825
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1831 }
Start
  { idx = 0
  , threadId = 1832
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1832
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1832
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1832
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1832
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1831 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1832
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1832
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1832
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1832
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1832
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1832
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1838 }
Start
  { idx = 0
  , threadId = 1839
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1839
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1839
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1839
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1839
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1838 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1839
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1839
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1839
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1839
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1839
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1839
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1845 }
Start
  { idx = 0
  , threadId = 1846
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1846
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1846
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1846
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1846
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1845 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1846
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1846
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1846
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1846
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1846
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1846
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1852 }
Start
  { idx = 0
  , threadId = 1853
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1853
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1853
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1853
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1853
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1852 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1853
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1853
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1853
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1853
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1853
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1853
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1859 }
Start
  { idx = 0
  , threadId = 1860
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1860
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1860
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1860
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1860
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1859 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1860
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1860
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1860
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1860
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1860
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1860
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1866 }
Start
  { idx = 0
  , threadId = 1867
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1867
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1867
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1867
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1867
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1866 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1867
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1867
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1867
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1867
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1867
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1867
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1873 }
Start
  { idx = 0
  , threadId = 1874
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1874
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1874
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1874
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1874
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1873 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1874
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1874
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1874
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1874
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1874
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1874
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1880 }
Start
  { idx = 0
  , threadId = 1881
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1881
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1881
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1881
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1881
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1880 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1881
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1881
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1881
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1881
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1881
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1881
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1887 }
Start
  { idx = 0
  , threadId = 1889
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1889
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1889
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1889
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1889
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1887 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1889
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1889
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1889
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1889
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1889
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1889
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1894 }
Start
  { idx = 0
  , threadId = 1896
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1896
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1896
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1896
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1896
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1894 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1896
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1896
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1896
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1896
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1896
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1896
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1901 }
Start
  { idx = 0
  , threadId = 1902
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1902
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1902
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1902
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1902
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1901 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1902
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1902
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1902
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1902
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1902
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1902
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1908 }
Start
  { idx = 0
  , threadId = 1909
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1909
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1909
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1909
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1909
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1908 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1909
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1909
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1909
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1909
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1909
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1909
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1915 }
Start
  { idx = 0
  , threadId = 1916
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1916
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1916
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1916
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1916
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1915 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1916
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1916
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1916
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1916
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1916
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1916
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1922 }
Start
  { idx = 0
  , threadId = 1923
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1923
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1923
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1923
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1923
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1922 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1923
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1923
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1923
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1923
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1923
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1923
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1929 }
Start
  { idx = 0
  , threadId = 1930
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1930
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1930
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1930
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1930
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1929 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1930
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1930
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1930
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1930
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1930
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1930
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1936 }
Start
  { idx = 0
  , threadId = 1937
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1937
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1937
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1937
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1937
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1936 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1937
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1937
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1937
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1937
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1937
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1937
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1943 }
Start
  { idx = 0
  , threadId = 1944
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1944
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1944
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1944
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1944
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1943 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1944
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1944
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1944
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1944
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1944
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1944
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1950 }
Start
  { idx = 0
  , threadId = 1951
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1951
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1951
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1951
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1951
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1950 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1951
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1951
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1951
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1951
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1951
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1951
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1957 }
Start
  { idx = 0
  , threadId = 1958
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1958
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1958
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1958
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1958
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1957 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1958
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1958
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1958
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1958
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1958
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1958
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1964 }
Start
  { idx = 0
  , threadId = 1966
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1966
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1966
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1966
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1966
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1964 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1966
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1966
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1966
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1966
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1966
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1966
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1971 }
Start
  { idx = 0
  , threadId = 1972
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1972
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1972
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1972
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1972
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1971 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1972
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1972
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1972
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1972
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1972
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1972
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1978 }
Start
  { idx = 0
  , threadId = 1979
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1979
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1979
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1979
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1979
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1978 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1979
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1979
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1979
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1979
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1979
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1979
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1985 }
Start
  { idx = 0
  , threadId = 1986
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1986
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1986
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1986
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1986
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1985 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1986
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1986
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1986
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1986
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1986
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1986
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1992 }
Start
  { idx = 0
  , threadId = 1994
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 1994
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 1994
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 1994
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 1994
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1992 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1994
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 1994
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1994
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1994
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 1994
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 1994
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
#### Template ####
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 1999 }
Start
  { idx = 0
  , threadId = 2001
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2001
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2001
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2001
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2001
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 1999 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2001
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2001
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2001
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2001
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2001
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2001
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2006 }
Start
  { idx = 0
  , threadId = 2007
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2007
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2007
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2007
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2007
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2006 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2007
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2007
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2007
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2007
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2007
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2007
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2013 }
Start
  { idx = 0
  , threadId = 2015
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2015
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2015
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2015
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2015
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2013 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2015
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2015
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2015
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2015
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2015
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2015
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2020 }
Start
  { idx = 0
  , threadId = 2021
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2021
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2021
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2021
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2021
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2020 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2021
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2021
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2021
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2021
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2021
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2021
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2027 }
Start
  { idx = 0
  , threadId = 2029
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2029
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2029
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2029
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2029
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2027 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2029
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2029
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2029
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2029
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2029
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2029
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2034 }
Start
  { idx = 0
  , threadId = 2036
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2036
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2036
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2036
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2036
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2034 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2036
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2036
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2036
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2036
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2036
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2036
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2041 }
Start
  { idx = 0
  , threadId = 2043
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2043
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2043
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2043
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2043
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2041 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2043
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2043
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2043
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2043
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2043
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2043
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2049
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2049
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2049
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2049
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2049
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2049
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2056
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2056
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2056
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2056
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2056
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2056
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2063
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2063
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2063
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2063
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2063
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2063
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2048 }
Start
  { idx = 0
  , threadId = 2049
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2049
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2049
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2049
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2049
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2048 }
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2055 }
Start
  { idx = 0
  , threadId = 2056
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2056
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2056
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2056
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2056
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2055 }
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2062 }
Start
  { idx = 0
  , threadId = 2063
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2063
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2063
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2063
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2063
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2062 }
#### Template ####
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2069 }
Start
  { idx = 0
  , threadId = 2070
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2070
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2070
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2070
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2070
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2069 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2070
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2070
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2070
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2070
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2070
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2070
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2076 }
Start
  { idx = 0
  , threadId = 2077
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2077
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2077
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2077
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2077
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2076 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2077
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2077
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2077
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2077
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2077
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2077
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2083 }
Start
  { idx = 0
  , threadId = 2084
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2084
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2084
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2084
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2084
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2083 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2084
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2084
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2084
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2084
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2084
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2084
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2090 }
Start
  { idx = 0
  , threadId = 2091
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2091
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2091
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2091
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2091
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2090 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2091
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2091
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2091
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2091
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2091
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2091
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2097 }
Start
  { idx = 0
  , threadId = 2098
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2098
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2098
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2098
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2098
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2097 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2098
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2098
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2098
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2098
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2098
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2098
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2104 }
Start
  { idx = 0
  , threadId = 2105
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2105
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2105
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2105
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2105
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2104 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2105
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2105
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2105
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2105
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2105
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2105
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2111 }
Start
  { idx = 0
  , threadId = 2112
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2112
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2112
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2112
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2112
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2111 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2112
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2112
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2112
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2112
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2112
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2112
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2118 }
Start
  { idx = 0
  , threadId = 2119
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2119
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2119
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2119
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2119
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2118 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2119
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2119
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2119
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2119
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2119
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2119
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2125 }
Start
  { idx = 0
  , threadId = 2126
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2126
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2126
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2126
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2126
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2126
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2126
  , loc =
      ExePath
EndExecution { idx = 1 , threadId = 2125 }
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2126
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2126
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2126
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2126
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2132 }
Start
  { idx = 0
  , threadId = 2133
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2133
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2133
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2133
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2133
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2132 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2133
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2133
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2133
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2133
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2133
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2133
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2139 }
Start
  { idx = 0
  , threadId = 2140
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2140
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2140
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2140
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2140
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2139 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2140
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2140
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2140
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2140
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2140
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2140
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2146 }
Start
  { idx = 0
  , threadId = 2147
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2147
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2147
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2147
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2147
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2146 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2147
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2147
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2147
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2147
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2147
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2147
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2153 }
Start
  { idx = 0
  , threadId = 2154
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2154
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2154
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2154
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2154
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2153 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2154
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2154
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2154
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2154
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2154
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2154
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2160 }
Start
  { idx = 0
  , threadId = 2162
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2162
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2162
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2162
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2162
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2160 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2162
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2162
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2162
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2162
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2162
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2162
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2167 }
Start
  { idx = 0
  , threadId = 2169
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2169
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2169
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2169
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2169
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2167 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2169
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2169
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2169
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2169
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2169
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2169
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2174 }
Start
  { idx = 0
  , threadId = 2176
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2176
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2176
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2176
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2176
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2174 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2176
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2176
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2176
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2176
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2176
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2176
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2181 }
Start
  { idx = 0
  , threadId = 2183
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2183
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2183
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2183
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2183
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2181 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2183
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2183
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2183
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2183
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2183
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2183
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2188 }
Start
  { idx = 0
  , threadId = 2190
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2190
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2190
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2190
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2190
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2188 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2190
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2190
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2190
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2190
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2190
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2190
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2195 }
Start
  { idx = 0
  , threadId = 2196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2196
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2196
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2195 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2196
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2196
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2196
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2196
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2202 }
Start
  { idx = 0
  , threadId = 2204
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2204
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2204
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2204
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2204
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2202 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2204
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2204
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2204
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2204
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2204
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2204
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2209 }
Start
  { idx = 0
  , threadId = 2210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2210
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2210
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2209 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2210
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2210
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2210
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2210
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2216 }
Start
  { idx = 0
  , threadId = 2218
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2218
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2218
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2218
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2218
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2216 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2218
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2218
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2218
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2218
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2218
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2218
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2223 }
Start
  { idx = 0
  , threadId = 2224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2224
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2224
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2223 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2224
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2224
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2224
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2224
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2230 }
Start
  { idx = 0
  , threadId = 2232
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2232
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2232
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2232
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2232
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2230 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2232
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2232
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2232
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2232
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2232
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2232
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2237 }
Start
  { idx = 0
  , threadId = 2238
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2238
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2238
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2238
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2238
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2237 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2238
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2238
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2238
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2238
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2238
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2238
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2244 }
Start
  { idx = 0
  , threadId = 2246
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2246
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2246
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2246
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2246
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2244 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2246
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2246
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2246
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2246
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2246
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2246
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2251 }
Start
  { idx = 0
  , threadId = 2253
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2253
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2253
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2253
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2253
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2251 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2253
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2253
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2253
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2253
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2253
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2253
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2258 }
Start
  { idx = 0
  , threadId = 2260
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2260
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2260
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2260
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2260
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2258 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2260
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2260
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2260
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2260
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2260
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2260
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2265 }
Start
  { idx = 0
  , threadId = 2267
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2267
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2267
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2267
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2267
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2265 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2267
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2267
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2267
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2267
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2267
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2267
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2272 }
Start
  { idx = 0
  , threadId = 2274
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2274
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2274
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2274
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2274
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2272 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2274
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2274
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2274
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2274
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2274
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2274
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2279 }
Start
  { idx = 0
  , threadId = 2281
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2281
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2281
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2281
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2281
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2279 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2281
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2281
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2281
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2281
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2281
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2281
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2286 }
Start
  { idx = 0
  , threadId = 2287
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2287
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2287
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2287
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2287
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2286 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2287
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2287
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2287
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2287
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2287
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2287
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2293 }
Start
  { idx = 0
  , threadId = 2294
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2294
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2294
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2294
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2294
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2293 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2294
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2294
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2294
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2294
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2294
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2294
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2300 }
Start
  { idx = 0
  , threadId = 2301
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2301
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2301
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2301
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2301
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2300 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2301
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2301
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2301
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2301
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2301
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2301
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2307 }
Start
  { idx = 0
  , threadId = 2308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2308
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2308
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2307 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2308
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2308
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2308
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2308
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2314 }
Start
  { idx = 0
  , threadId = 2316
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2316
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2316
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2316
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2316
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2314 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2316
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2316
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2316
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2316
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2316
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2316
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2321 }
Start
  { idx = 0
  , threadId = 2323
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2323
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2323
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2323
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2323
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2321 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2323
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2323
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2323
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2323
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2323
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2323
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2328 }
Start
  { idx = 0
  , threadId = 2329
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2329
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2329
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2329
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2329
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2328 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2329
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2329
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2329
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2329
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2329
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2329
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2335 }
Start
  { idx = 0
  , threadId = 2336
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2336
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2336
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2336
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2336
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2335 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2336
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2336
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2336
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2336
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2336
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2336
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2342 }
Start
  { idx = 0
  , threadId = 2344
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2344
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2344
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2344
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2344
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2342 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2344
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2344
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2344
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2344
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2344
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2344
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2349 }
Start
  { idx = 0
  , threadId = 2350
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2350
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2350
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2350
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2350
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2349 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2350
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2350
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2350
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2350
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2350
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2350
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2356 }
Start
  { idx = 0
  , threadId = 2358
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2358
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2358
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2358
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2358
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2356 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2358
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2358
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2358
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2358
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2358
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2358
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2363 }
Start
  { idx = 0
  , threadId = 2364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2364
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2364
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2363 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2364
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2364
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2364
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2364
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2370 }
Start
  { idx = 0
  , threadId = 2372
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2372
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2372
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2372
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2372
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2370 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2372
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2372
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2372
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2372
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2372
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2372
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2377 }
Start
  { idx = 0
  , threadId = 2379
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2379
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2379
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2379
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2379
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2377 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2379
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2379
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2379
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2379
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2379
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2379
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2384 }
Start
  { idx = 0
  , threadId = 2385
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2385
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2385
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2385
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2385
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2384 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2385
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2385
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2385
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2385
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2385
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2385
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2391 }
Start
  { idx = 0
  , threadId = 2393
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2393
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2393
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2393
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2393
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2391 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2393
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2393
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2393
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2393
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2393
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2393
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2398 }
Start
  { idx = 0
  , threadId = 2399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2399
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2399
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2398 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2399
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2399
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2399
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2399
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2405 }
Start
  { idx = 0
  , threadId = 2406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2406
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2406
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2405 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2406
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2406
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2406
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2406
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2412 }
Start
  { idx = 0
  , threadId = 2413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2413
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2413
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2412 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2413
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2413
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2413
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2413
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2419 }
Start
  { idx = 0
  , threadId = 2420
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2420
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2420
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2420
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2420
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2419 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2420
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2420
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2420
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2420
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2420
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2420
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2426 }
Start
  { idx = 0
  , threadId = 2427
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2427
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2427
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2427
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2427
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2426 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2427
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2427
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2427
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2427
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2427
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2427
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2433 }
Start
  { idx = 0
  , threadId = 2434
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2434
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2434
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2434
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2434
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2433 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2434
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2434
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2434
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2434
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2434
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2434
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2440 }
Start
  { idx = 0
  , threadId = 2442
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2442
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2442
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2442
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2442
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2440 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2442
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2442
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2442
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2442
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2442
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2442
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2447 }
Start
  { idx = 0
  , threadId = 2448
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2448
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2448
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2448
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2448
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2447 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2448
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2448
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2448
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2448
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2448
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2448
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2454 }
Start
  { idx = 0
  , threadId = 2455
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2455
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2455
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2455
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2455
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2454 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2455
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2455
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2455
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2455
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2455
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2455
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2461 }
Start
  { idx = 0
  , threadId = 2463
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2463
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2463
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2463
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2463
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2461 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2463
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2463
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2463
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2463
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2463
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2463
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2468 }
Start
  { idx = 0
  , threadId = 2469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2469
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2469
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2468 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2469
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2469
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2469
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2469
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2475 }
Start
  { idx = 0
  , threadId = 2476
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2476
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2476
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2476
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2476
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2475 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2476
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2476
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2476
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2476
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2476
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2476
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2482 }
Start
  { idx = 0
  , threadId = 2483
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2483
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2483
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2483
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2483
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2483
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2482 }
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2483
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2483
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2483
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2483
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2483
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2489 }
Start
  { idx = 0
  , threadId = 2491
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2491
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2491
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2491
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2491
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2489 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2491
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2491
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2491
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2491
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2491
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2491
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2496 }
Start
  { idx = 0
  , threadId = 2497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2497
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2497
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2496 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2497
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2497
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2497
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2497
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2503 }
Start
  { idx = 0
  , threadId = 2504
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2504
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2504
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2504
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2504
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2503 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2504
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2504
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2504
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2504
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2504
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2504
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2510 }
Start
  { idx = 0
  , threadId = 2512
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2512
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2512
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2512
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2512
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2510 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2512
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2512
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2512
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2512
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2512
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2512
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2517 }
Start
  { idx = 0
  , threadId = 2518
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2518
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2518
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2518
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2518
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2517 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2518
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2518
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2518
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2518
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2518
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2518
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2524 }
Start
  { idx = 0
  , threadId = 2525
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2525
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2525
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2525
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2525
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2524 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2525
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2525
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2525
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2525
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2525
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2525
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2531 }
Start
  { idx = 0
  , threadId = 2532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2532
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2532
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2531 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2532
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2532
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2532
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2532
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2538 }
Start
  { idx = 0
  , threadId = 2539
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2539
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2539
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2539
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2539
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2538 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2539
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2539
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2539
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2539
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2539
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2539
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2545 }
Start
  { idx = 0
  , threadId = 2546
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2546
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2546
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2546
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2546
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2545 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2546
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2546
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2546
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2546
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2546
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2546
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2552 }
Start
  { idx = 0
  , threadId = 2553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2553
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2553
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2552 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2553
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2553
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2553
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2553
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
#### Template ####
[ OnceAround
    { path = NodePath { module' = "0" , path = "OnceAround" }
    , setupSpec = Spec { delay = 0 , result = Fail }
    , teardownSpec = Spec { delay = 0 , result = Pass }
    , subNodes =
        [ Fixture
            { path = NodePath { module' = "0.0" , path = "Test" }
            , tests =
                [ TestItem
                    { id = 0
                    , title = "0.0 Test"
                    , spec = Spec { delay = 0 , result = Pass }
                    }
                ]
            }
        ]
    }
]
=========
#### (Indent, Node Path) After Prepare ####
[ [ ( 0 , NodePath { module' = "0" , path = "OnceAround" } )
  , ( 1 , NodePath { module' = "0.0" , path = "Test" } )
  ]
]
=========
#### Log ####
StartExecution { idx = 0 , threadId = 2559 }
Start
  { idx = 0
  , threadId = 2561
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
Failure
  { idx = 1
  , threadId = 2561
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , exception =
      PException
        { displayText =
            [ "\"NodePath {module' = \\\"0\\\", path = \\\"OnceAround\\\"} failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-d785bc774ce2cb944aefabcc579bcc6aa958f3b3aa563694f6184f924047743c:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTestBase.hs:1018:7 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTestBase\""
            ]
        }
  }
End
  { idx = 2
  , threadId = 2561
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
ParentFailure
  { idx = 3
  , threadId = 2561
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
ParentFailure
  { idx = 4
  , threadId = 2561
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
EndExecution { idx = 1 , threadId = 2559 }
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2561
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
ParentFailure
  { idx = 4
  , threadId = 2561
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , suiteEvent = Hook Once Teardown
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2561
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
thisParentCandidate: Nothing
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Setup
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2561
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- Target EVENT ---
Start
  { idx = 0
  , threadId = 2561
  , suiteEvent = Hook Once Setup
  , loc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  }
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
thisParentCandidate: Nothing
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un =
        [ TestPath { id = 0 , title = "0.0 Test" }
        , NodePath { module' = "0.0" , path = "Test" }
        , NodePath { module' = "0" , path = "OnceAround" }
        ]
    }
matches: False
targEvntSubPath: Just ExePath { un = [] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: False
--- Target EVENT ---
ParentFailure
  { idx = 3
  , threadId = 2561
  , loc =
      ExePath
        { un =
            [ TestPath { id = 0 , title = "0.0 Test" }
            , NodePath { module' = "0.0" , path = "Test" }
            , NodePath { module' = "0" , path = "OnceAround" }
            ]
        }
  , suiteEvent = Test
  , failLoc =
      ExePath
        { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
  , failSuiteEvent = Hook Once Setup
  }
--- targEvntSubPath ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
--- thisParentCandidate ---
Just
  ExePath
    { un = [ NodePath { module' = "0" , path = "OnceAround" } ] }
matches: True
--- Actual Parents ---
[ ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Setup
      }
  , Nothing
  )
, ( SuiteEventPath
      { path = TestPath { id = 0 , title = "0.0 Test" }
      , suiteEvent = Test
      }
  , Just
      SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
  )
, ( SuiteEventPath
      { path = NodePath { module' = "0" , path = "OnceAround" }
      , suiteEvent = Hook Once Teardown
      }
  , Nothing
  )
]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
--- EXPECTED PARENTS ---
fromList
  [ ( SuiteEventPath
        { path = TestPath { id = 0 , title = "0.0 Test" }
        , suiteEvent = Test
        }
    , SuiteEventPath
        { path = NodePath { module' = "0" , path = "OnceAround" }
        , suiteEvent = Hook Once Teardown
        }
    )
  ]
