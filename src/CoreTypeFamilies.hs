module CoreTypeFamilies where

import GHC.TypeLits (TypeError)
import GHC.TypeError (ErrorMessage(..))

type family DataSourceType dataSource where
    DataSourceType (rc -> ds i) = i

type family ActionInputType action where
    ActionInputType (rc -> i -> m as) = i

type family DataSourceMatchesAction ds ai :: Constraint where
    DataSourceMatchesAction ds ds = ()  -- Types match, constraint satisfied
    DataSourceMatchesAction ds ai = TypeError
      ( 
      'Text "Pyrethrum Fixture Type Error ~ dataSource / action mismatch"
        :$$: 'Text "The `action` function's input type does not match the type returned by the `dataSource`."
        :$$: 'Text "The data elements generated by the `dataSource` are used as input to the `action` so their types must match."
        :$$: 'Text "The type returned by the 'dataSource' for this fixture is: `"
        :<>: 'ShowType ds
        :<>: 'Text "`"
        :$$: 'Text "  which does not match input type required by the fixture `action`, which is: `"
        :<>: 'ShowType ai
        :<>: 'Text "`"
        :$$: 'Text "Either: "
        :$$: 'Text "  1. change the `action` so the input type is the same as the `dataSource` elements: "
        :<>: 'Text "`"
        :<>: 'ShowType ds
        :<>: 'Text "`"
        :$$: 'Text "  Or: "
        :$$: 'Text "  2. change the `dataSource` so the elements returned are the same type as required by the `action` function: "
        :<>: 'Text "`"
        :<>: 'ShowType ai
        :<>: 'Text "`"
      )