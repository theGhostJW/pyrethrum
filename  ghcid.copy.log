All good (32 modules, at 06:21:05)
 
/home/theghostjw/pyrethrum/pyrethrum/test/SuiteRuntimeTest.hs:23:1
$> unit_simple_pass

[ OnceAround
    { path = SuiteElmPath { module' = "0" , path = "OnceAround" }
    , delay = 0
    , passSetup = True
    , passTeardown = True
    , subNodes =
        [ Test
            { path = SuiteElmPath { module' = "0.0" , path = "Test" }
            , testItems =
                [ TestItem
                    { id = 0 , title = "0.0 TestItem" , delay = 0 , pass = True }
                , TestItem
                    { id = 1 , title = "0.0 TestItem" , delay = 0 , pass = False }
                ]
            }
        ]
    }
]
=========
StartExecution
  { idx = 0 , threadId = SThreadId { display = "ThreadId 953" } }
Start
  { idx = 0
  , threadId = SThreadId { display = "ThreadId 954" }
  , eventType = Hook Once Setup
  , loc =
      ExePath
        { unExePath =
            [ SuiteElmPath { module' = "0" , path = "OnceAround" } ]
        }
  }
End
  { idx = 1
  , threadId = SThreadId { display = "ThreadId 954" }
  , eventType = Hook Once Setup
  , loc =
      ExePath
        { unExePath =
            [ SuiteElmPath { module' = "0" , path = "OnceAround" } ]
        }
  }
Start
  { idx = 2
  , threadId = SThreadId { display = "ThreadId 954" }
  , eventType = Test
  , loc =
      ExePath
        { unExePath =
            [ TestPath { id = 0 , title = "0.0 TestItem" }
            , SuiteElmPath { module' = "0.0" , path = "Test" }
            , SuiteElmPath { module' = "0" , path = "OnceAround" }
            ]
        }
  }
End
  { idx = 3
  , threadId = SThreadId { display = "ThreadId 954" }
  , eventType = Test
  , loc =
      ExePath
        { unExePath =
            [ TestPath { id = 0 , title = "0.0 TestItem" }
            , SuiteElmPath { module' = "0.0" , path = "Test" }
            , SuiteElmPath { module' = "0" , path = "OnceAround" }
            ]
        }
  }
Start
  { idx = 4
  , threadId = SThreadId { display = "ThreadId 954" }
  , eventType = Test
  , loc =
      ExePath
        { unExePath =
            [ TestPath { id = 1 , title = "0.0 TestItem" }
            , SuiteElmPath { module' = "0.0" , path = "Test" }
            , SuiteElmPath { module' = "0" , path = "OnceAround" }
            ]
        }
  }
Failure
  { idx = 5
  , threadId = SThreadId { display = "ThreadId 954" }
  , exception =
      PException
        { displayText =
            [ "\"\\\"0.0 TestItem\\\" failed\""
            , "\"CallStack (from HasCallStack):\""
            , "\"  error, called at src/Relude/Debug.hs:296:11 in relude-1.2.1.0-e314f41607d4a917a3a6b3d2eb68ea6953a6c8fa4d8f501d8d65aebf58f573f7:Relude.Debug\""
            , "\"  error, called at test/SuiteRuntimeTest.hs:153:19 in pyrethrum-0.1.0.0-inplace:SuiteRuntimeTest\""
            ]
        }
  , loc =
      ExePath
        { unExePath =
            [ TestPath { id = 1 , title = "0.0 TestItem" }
            , SuiteElmPath { module' = "0.0" , path = "Test" }
            , SuiteElmPath { module' = "0" , path = "OnceAround" }
            ]
        }
  }
End
  { idx = 6
  , threadId = SThreadId { display = "ThreadId 954" }
  , eventType = Test
  , loc =
      ExePath
        { unExePath =
            [ TestPath { id = 1 , title = "0.0 TestItem" }
            , SuiteElmPath { module' = "0.0" , path = "Test" }
            , SuiteElmPath { module' = "0" , path = "OnceAround" }
            ]
        }
  }
Start
  { idx = 7
  , threadId = SThreadId { display = "ThreadId 954" }
  , eventType = Hook Once Teardown
  , loc =
      ExePath
        { unExePath =
            [ SuiteElmPath { module' = "0" , path = "OnceAround" } ]
        }
  }
End
  { idx = 8
  , threadId = SThreadId { display = "ThreadId 954" }
  , eventType = Hook Once Teardown
  , loc =
      ExePath
        { unExePath =
            [ SuiteElmPath { module' = "0" , path = "OnceAround" } ]
        }
  }
EndExecution
  { idx = 1 , threadId = SThreadId { display = "ThreadId 953" } }
 checks done
